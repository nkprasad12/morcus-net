name: morcus.net CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - dev

jobs:
  presubmit-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Installing npm dependencies
        run: npm ci --omit optional
      - name: Installing Python dependencies
        run: pip install -r requirements.txt
      - name: Running unit tests
        run: npm run coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./coverage
      - name: Checking formatting
        run: npm run format-check

  prod-build:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Installing npm dependencies
        run: npm ci --omit optional
      - name: Running prod build step
        run: npm run build
      - name: Preparing server bundle
        run: |
          mkdir build
          npm run tsnp src/esbuild/server.esbuild.ts
          mv node_modules/better-sqlite3/build/Release/better_sqlite3.node ./build/
      - uses: actions/upload-artifact@v4
        with:
          name: build_outputs
          path: |
            library_processed/
            public/
            build/
            ls.db
            sh.db
            lat_infl.db
            morcusnet.commit.txt
            package.json
          compression-level: 9

  docker-image:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          tags: morcus
          load: true
      - name: Write image
        run: docker image save morcus -o morcus.image
      - name: Compress image
        run: xz -c2 morcus.image > morcus.image.xz
      - uses: actions/upload-artifact@v4
        with:
          name: docker_image
          path: morcus.image.xz
          compression-level: 0

  integration-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Installing npm dependencies
        run: npm ci
      - name: Running integration checks
        run: npm run integration-tests
      - name: Upload Puppeteer Screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: puppeteer_screenshots
          path: |
            puppeteer_screenshots/

  pytype-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"
      - name: Installing Python dependencies
        run: pip install -r requirements.txt
      - name: Checking Pytype
        run: npm run pytype
