name: Morcus CI

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  presubmit-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 7

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Installing npm dependencies
        run: npm ci
      - name: Building Rust bindings
        run: npm run setup-node-bindgen
      - name: Installing Python dependencies
        run: pip install -r requirements.txt
      - name: Running unit tests
        run: npm run coverage
      - name: Checking formatting
        run: npm run format-check
      - name: Checking TS types
        run: npx tsc
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          directory: ./coverage

  pytype-checks:
    runs-on: ubuntu-latest
    timeout-minutes: 6

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Installing Python dependencies
        run: pip install -r requirements.txt
      - name: Checking Pytype
        run: npm run pytype

  build-image:
    runs-on: ubuntu-latest
    timeout-minutes: 9
    env:
      CANDIDATE: ghcr.io/nkprasad12/morcus:${{ github.sha }}
      LATEST: ghcr.io/nkprasad12/morcus:dev-latest
      PREVIOUS: ghcr.io/nkprasad12/morcus:dev-previous
      PR_LATEST: ghcr.io/nkprasad12/morcus:pr-latest

    steps:
      - uses: actions/checkout@v4
      - name: Build image
        run: docker build . --tag $CANDIDATE --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
      - name: Push image
        run: docker push $CANDIDATE
      - name: Backup current dev image
        if: github.ref == 'refs/heads/dev'
        run: docker pull $LATEST && docker tag $LATEST $PREVIOUS && docker push $PREVIOUS || true
      - name: Push latest dev image
        if: github.ref == 'refs/heads/dev'
        run: |
          docker tag $CANDIDATE $LATEST
          docker push $LATEST
      - name: Push latest PR image
        if: github.ref != 'refs/heads/dev'
        run: |
          docker tag $CANDIDATE $PR_LATEST
          docker push $PR_LATEST

  validate-image:
    needs: [build-image]
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Installing npm dependencies
        run: npm ci
      - name: Installing browsers
        run: npx playwright install --with-deps
      - name: Pulling docker image
        run: docker pull ghcr.io/nkprasad12/morcus:${{ github.sha }}
      - name: Running integration checks
        run: IMAGE_TAG=${{ github.sha }} npm run integration-tests
      - name: Upload test report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: functional-test-report
          path: playwright-report/

  e2e-performance:
    needs: [build-image]
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        screenSize: [small, large]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
      - name: Pulling docker images
        run: |
          docker pull ghcr.io/nkprasad12/morcus:${{ github.sha }}
          docker pull ghcr.io/nkprasad12/morcus:main-latest
      - name: Installing npm dependencies
        run: npm ci
      - name: Installing browsers
        run: npx playwright install chromium --with-deps
      - name: Setting up .env
        run: touch .env
      - name: Setting comparison tag (dev branch)
        if: github.ref == 'refs/heads/dev'
        run: echo "A_TAG=main-latest" >> "$GITHUB_ENV"
      - name: Setting comparison tag (non-dev branch)
        if: github.ref != 'refs/heads/dev'
        run: echo "A_TAG=dev-latest" >> "$GITHUB_ENV"
      - name: Running Performance tests
        run: npm run tsnp src/scripts/perf_a_b.ts -- --A=$A_TAG --B=${{ github.sha }} --N=40 --screenSize=${{ matrix.screenSize }} --ci
      - name: Upload Performance report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: performance-report-${{ matrix.screenSize }}
          path: e2e_metrics/
